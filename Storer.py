#################################################################
#																#
# -Project:		Prevalence of Types of ASEPs in Windows malware #
# -File:		Storer.py										#
# -Author:		Carlos Borau Gonz√°lez | NIP: 778280				#
# -Description: Manages the storing of analyzed malware samples #
#					along with their respective behavior logs	#
#					and labeling results.						#
#																#
#################################################################

import pyzipper
import shutil
import os

class Storer:


	def __init__(self, results_directory):
	
		self.resultsDirectory = results_directory
		
	
	def sampleName(self, samplePath):
			
		return os.path.basename(samplePath)
			
			
	def sampleID(self, sampleName):
	
		return os.path.splitext(sampleName)[0]
		
	
	def createSampleTmpDir(self, samplePath):
	
		sampleName = self.sampleName(samplePath)
		sampleID = self.sampleID(sampleName)
	
		dirPath = '/tmp/' + sampleID
		os.mkdir(dirPath)
		
		newSamplePath = os.path.join(dirPath, sampleName)
		shutil.move(samplePath, newSamplePath)
	
		return sampleID
	
	
	def createSampleResource(self, sampleID, resource, content):
	
		resourcePath = '/tmp/' + sampleID + '/' + resource
		resource = open(resourcePath, "w")
		resource.write(content)
		resource.close()
		
		return resourcePath
		
		
	def storeSample(self, sampleID):
	
		zipPath = os.path.join(self.resultsDirectory, sampleID + '.zip')
		dirPath = '/tmp/' + sampleID
		
		with pyzipper.AESZipFile(zipPath, 'w', 
				compression=pyzipper.ZIP_LZMA, encryption=pyzipper.WZ_AES) as zf:
				
			zf.setpassword(b'ASEPs')
			for resource in os.listdir(dirPath):
				zf.write(os.path.join(dirPath, resource), arcname=resource)
				
		shutil.rmtree(dirPath)
	
