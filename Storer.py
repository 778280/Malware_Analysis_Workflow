#################################################################
#																#
# -Project:		Prevalence of Types of ASEPs in Windows malware #
# -File:		Storer.py										#
# -Author:		Carlos Borau Gonz√°lez | NIP: 778280				#
# -Description: Manages the storing of analyzed malware samples #
#					along with their respective behavior logs	#
#					and labeling results.						#
#																#
#################################################################

import pyminizip as pyzip
import shutil
import os

class Storer:


	def __init__(self, results_directory):
	
		self.resultsDirectory = results_directory
		
	
	def SampleName(self, samplePath):
			
		return os.path.basename(samplePath)
			
			
	def SampleID(self, sampleName):
	
		return os.path.splitext(sampleName)[0]
		
	
	def CreateSampleTmpDir(self, samplePath):
	
		sampleName = self.SampleName(samplePath)
		sampleID = self.SampleID(sampleName)
	
		dirPath = '/tmp/' + sampleID
		print("Creating sample tmpDir", dirPath)
		os.mkdir(dirPath)
		
		newSamplePath = os.path.join(dirPath, sampleName)
		shutil.move(samplePath, newSamplePath)
	
		return sampleID
	
	
	def CreateSampleResource(self, sampleID, resource, content):
	
		resourcePath = '/tmp/' + sampleID + '/' + resource
		print("Creating sample resource", resourcePath)		
		resource = open(resourcePath, "w")
		resource.write(content)
		resource.close()
		
		return resourcePath
		
		
	def StoreSample(self, sampleID):
	
		zipPath = os.path.join(self.resultsDirectory, sampleID + '.zip')
		print("Storing sample results to", zipPath)
		dirPath = '/tmp/' + sampleID
		password = 'ASEPs'
		
		if os.path.isdir(dirPath):
		
			files = [os.path.join(dirPath, fname) for fname in os.listdir(dirPath)]
			
			pyzip.compress_multiple(files, [], zipPath, password, 9)
					
			shutil.rmtree(dirPath)
			
		else: print("Sample {0} dir not yet created".format(sampleID))
	
